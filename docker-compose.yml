
services:
  db:
    networks:
      - app_network
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    networks:
      - app_network
    build: .
    command: >
        bash -c  "python manage.py migrate && python manage.py csu && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media:/app/media
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
    command: celery -A config beat -l INFO -S django
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  media:
  static_volume:


  nginx:
    build: .
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
