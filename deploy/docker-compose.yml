
services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
    networks:
      - app_network

  db:
    networks:
      - app_network
    image: postgres:16.3-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    networks:
      - app_network

    image: kuchaser/myapp:04e74c1925eed3fda3bb9f31f24d6c7b882422a9

    build:
      context: .
      dockerfile: ./Dockerfile

    command: >
      bash -c  "poetry install --no-root && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

    volumes:
      - .:/app
      - media:/app/media
      - static_volume:/code/static
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network


  celery:
    image: kuchaser/myapp:04e74c1925eed3fda3bb9f31f24d6c7b882422a9

    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
    networks:
      - app_network

  celery_beat:
    image: kuchaser/myapp:04e74c1925eed3fda3bb9f31f24d6c7b882422a9

    command: celery -A config beat -l INFO -S django
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  media:
  static_volume:



